import OAuth2 from '../oauth2/OAuth2';
import { IOAuthProfileFetcher } from '../OAuthCommon';
interface ILineTokenPayload {
    access_token: string;
    expires_in: number;
    id_token: string;
    refresh_tokeN: string;
    scope: string;
    token_type: 'Bearer';
}
export default class GoogleAuthenticator extends OAuth2<ILineTokenPayload> implements IOAuthProfileFetcher<ILineTokenPayload> {
    private childConfig;
    constructor(childConfig: {
        clientID: string;
        clientSecret: string;
        redirectUri: string;
        scope?: string;
    });
    fetchProfile({ access_token, id_token }: ILineTokenPayload, ignoreEmail?: boolean): Promise<{
        email: any;
        id: any;
        avatar: any;
        first: any;
        last: any;
        raw: any;
    }>;
    refreshAccessToken(refreshToken: string): Promise<any>;
}
export {};
