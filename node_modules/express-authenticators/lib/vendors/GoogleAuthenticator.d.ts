import OAuth2 from '../oauth2/OAuth2';
import { IOAuthProfileFetcher } from '../OAuthCommon';
interface IGoogleTokenPayload {
    access_token: string;
    expires_in: number;
    refresh_token: string;
    scope: string;
    token_type: 'Bearer';
}
export default class GoogleAuthenticator extends OAuth2<IGoogleTokenPayload> implements IOAuthProfileFetcher<IGoogleTokenPayload> {
    private childConfig;
    fetchProfile: ({ access_token }: IGoogleTokenPayload, fields?: string[]) => Promise<{
        raw: any;
        avatar: any;
        email?: any;
        emailVerified?: any;
        id: any;
    } | {
        raw: any;
        first: any;
        last: any;
        avatar: any;
        email?: any;
        emailVerified?: any;
        id: any;
    } | {
        raw: any;
        first: any;
        last?: undefined;
        avatar: any;
        email?: any;
        emailVerified?: any;
        id: any;
    }>;
    constructor(childConfig: {
        clientID: string;
        clientSecret: string;
        redirectUri: string;
        scope?: string;
    });
    refreshAccessToken(refreshToken: string): Promise<any>;
}
export {};
