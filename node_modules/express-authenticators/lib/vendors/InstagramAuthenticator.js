"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const OAuth2_1 = __importDefault(require("../oauth2/OAuth2"));
const node_fetch_1 = __importDefault(require("node-fetch"));
const OAuthCommon_1 = require("../OAuthCommon");
const url_1 = require("url");
const fetchInstagramProfile = ({ access_token }, fields = [
    'account_type',
    'id',
    'media_count',
    'username'
]) => __awaiter(void 0, void 0, void 0, function* () {
    var _a, _b, _c, _d, _e, _f;
    const res = yield (0, node_fetch_1.default)(`https://graph.instagram.com/me?${new url_1.URLSearchParams({
        access_token,
        fields: fields.join(',')
    }).toString()}`, {
        headers: {
            Accept: 'application/json',
        }
    });
    if (!res.ok)
        throw new OAuthCommon_1.OAuthProfileError(yield res.text());
    const profile = yield res.json();
    if (!profile.id)
        throw new OAuthCommon_1.OAuthProfileError('Invalid Instagram profile ID');
    let graphProfile;
    if (profile.username) {
        const graphRes = yield (0, node_fetch_1.default)(`https://instagram.com/${profile.username}/?__a=1`);
        if (graphRes.ok) {
            graphProfile = yield graphRes.json();
        }
    }
    return {
        id: profile.id,
        first: (_b = (_a = graphProfile === null || graphProfile === void 0 ? void 0 : graphProfile.graphql) === null || _a === void 0 ? void 0 : _a.user) === null || _b === void 0 ? void 0 : _b.full_name,
        avatar: ((_d = (_c = graphProfile === null || graphProfile === void 0 ? void 0 : graphProfile.graphql) === null || _c === void 0 ? void 0 : _c.user) === null || _d === void 0 ? void 0 : _d.profile_pic_url_hd) || ((_f = (_e = graphProfile === null || graphProfile === void 0 ? void 0 : graphProfile.graphql) === null || _e === void 0 ? void 0 : _e.user) === null || _f === void 0 ? void 0 : _f.profile_pic_url_hd),
        raw: {
            profile,
            graphProfile
        }
    };
});
class InstagramAuthenticator extends OAuth2_1.default {
    constructor(options) {
        super(Object.assign({ consentURL: 'https://api.instagram.com/oauth/authorize', tokenURL: 'https://api.instagram.com/oauth/access_token', scope: [
                'instagram_graph_user_profile',
                'instagram_graph_user_media'
            ].join(' ') }, options), {
            ignoreGrantType: false,
            tokenRequestMethod: "POST" /* POST */,
            includeStateInAccessToken: false,
            enablePKCE: false,
        });
        this.fetchProfile = fetchInstagramProfile;
    }
}
exports.default = InstagramAuthenticator;
