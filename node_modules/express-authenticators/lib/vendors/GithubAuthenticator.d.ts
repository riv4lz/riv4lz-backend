import OAuth2 from '../oauth2/OAuth2';
import { IOAuthProfileFetcher } from '../OAuthCommon';
interface IGithubTokenPayload {
    access_token: string;
    token_type: 'bearer';
    scope: string;
}
export declare const fetchGithubProfile: ({ access_token }: IGithubTokenPayload) => Promise<{
    raw: any;
    email?: any;
    emailVerified?: any;
    id: any;
    first: any;
    last: string;
    avatar: any;
}>;
export default class GithubAuthenticator extends OAuth2<IGithubTokenPayload> implements IOAuthProfileFetcher<IGithubTokenPayload> {
    fetchProfile: ({ access_token }: IGithubTokenPayload) => Promise<{
        raw: any;
        email?: any;
        emailVerified?: any;
        id: any;
        first: any;
        last: string;
        avatar: any;
    }>;
    constructor(options: {
        clientID: string;
        clientSecret: string;
        redirectUri: string;
        scope?: string;
    });
}
export {};
